{"mode":"Text","hardwareTarget":"brain","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain = Brain()\n\n# Robot configuration code\nbrain_inertial = Inertial()\nmotor_5 = Motor(Ports.PORT5, True)\nmotor_1 = Motor(Ports.PORT1, False)\n\n\n# Wait for sensor(s) to fully initialize\nwait(100, MSEC)\n\n# generating and setting random seed\ndef initializeRandomSeed():\n    wait(100, MSEC)\n    xaxis = brain_inertial.acceleration(XAXIS) * 1000\n    yaxis = brain_inertial.acceleration(YAXIS) * 1000\n    zaxis = brain_inertial.acceleration(ZAXIS) * 1000\n    systemTime = brain.timer.system() * 100\n    urandom.seed(int(xaxis + yaxis + zaxis + systemTime)) \n\n# Initialize random seed \ninitializeRandomSeed()\n\n#endregion VEXcode Generated Robot Configuration\nvexcode_brain_precision = 0\nvexcode_console_precision = 0\nmyVariable = 0\nmessage1 = Event()\nFWD = Event()\nLT = Event()\nRT = Event()\nBACK = Event()\ndebug = False\n\ndef onevent_FWD_0():\n    global myVariable, message1, FWD, LT, RT, BACK, debug, vexcode_brain_precision, vexcode_console_precision\n    if debug:\n        brain.screen.next_row()\n        brain.screen.print(\"FORWARD\")\n    else:\n        motor_5.set_velocity(20, PERCENT)\n        motor_5.spin_for(FORWARD, 412, DEGREES)\n        wait(1, SECONDS)\n        motor_5.spin_for(FORWARD, 220, DEGREES)\n        wait(1, SECONDS)\n        motor_5.spin_for(FORWARD, 412, DEGREES)\n        wait(1, SECONDS)\n        motor_5.spin_for(REVERSE, 220, DEGREES)\n        wait(1, SECONDS)\n        motor_5.spin_for(FORWARD, 600, DEGREES)\n        wait(1, SECONDS)\n        motor_5.set_velocity(10, PERCENT)\n        wait(1, SECONDS)\n        motor_5.spin_for(REVERSE, 100, DEGREES)\n        wait(1, SECONDS)\n        motor_5.spin_for(REVERSE, 415, DEGREES)\n        wait(1, SECONDS)\n        motor_5.spin_for(FORWARD, 175, DEGREES)\n        wait(1, SECONDS)\n        motor_5.spin_for(FORWARD, 100, DEGREES)\n        wait(1, SECONDS)\n        motor_5.spin_for(REVERSE, 100, DEGREES)\n\ndef onevent_FWD_1():\n    global myVariable, message1, FWD, LT, RT, BACK, debug, vexcode_brain_precision, vexcode_console_precision\n    if debug:\n        brain.screen.next_row()\n        brain.screen.print(\"FORWARD\")\n    else:\n        motor_1.set_velocity(20, PERCENT)\n        motor_1.spin_for(FORWARD, 412, DEGREES)\n        wait(1, SECONDS)\n        motor_1.spin_for(REVERSE, 220, DEGREES)\n        wait(1, SECONDS)\n        motor_1.spin_for(FORWARD, 412, DEGREES)\n        wait(1, SECONDS)\n        motor_1.spin_for(FORWARD, 220, DEGREES)\n        wait(1, SECONDS)\n        motor_1.spin_for(FORWARD, 600, DEGREES)\n        wait(1, SECONDS)\n        motor_1.set_velocity(10, PERCENT)\n        wait(1, SECONDS)\n        motor_1.spin_for(FORWARD, 100, DEGREES)\n        wait(1, SECONDS)\n        motor_1.spin_for(REVERSE, 415, DEGREES)\n        wait(1, SECONDS)\n        motor_1.spin_for(REVERSE, 175, DEGREES)\n        wait(1, SECONDS)\n        motor_1.spin_for(FORWARD, 100, DEGREES)\n        wait(1, SECONDS)\n        motor_1.spin_for(FORWARD, 100, DEGREES)\n\ndef when_started1():\n    global myVariable, message1, FWD, LT, RT, BACK, debug, vexcode_brain_precision, vexcode_console_precision\n    debug = False\n    FWD.broadcast()\n\n# system event handlers\nFWD(onevent_FWD_0)\nFWD(onevent_FWD_1)\n# add 15ms delay to make sure events are registered correctly.\nwait(15, MSEC)\n\nwhen_started1()\n","textLanguage":"python","robotConfig":[{"port":[5],"name":"motor_5","customName":false,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[1],"name":"motor_1","customName":false,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse"},"triportSourcePort":22}],"slot":0,"platform":"EXP","sdkVersion":"20240802.15.00.00","appVersion":"4.0.8","minVersion":"4.0.0","fileFormat":"2.0.0","targetBrainGen":"First","v5SoundsEnabled":false,"target":"Physical"}